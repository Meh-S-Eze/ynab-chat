---
name: "Core Rule Index"
description: "Central guide for all rules in the project"

security_context:
  type: "Personal Project"
  description: "This is a personal garage project with no other users or access requirements. Security measures against data leaks and external threats are not needed."

rule_organization:
  categories:
    - range: "000-099"
      name: "Core and meta rules"
      description: "Foundational rules for project organization and management"
    - range: "100-199"
      name: "Development workflow rules"
      description: "Rules for development process and tooling"
    - range: "200-299"
      name: "Code style and formatting rules"
      description: "Standards for code formatting and style"
    - range: "300-399"
      name: "Testing rules"
      description: "Testing standards and practices"
    - range: "400-499"
      name: "Documentation rules"
      description: "Documentation requirements and standards"
    - range: "500-599"
      name: "Deployment rules"
      description: "Deployment and release processes"
    - range: "600-699"
      name: "Backend architecture rules"
      description: "Express server and PostgreSQL database standards"
    - range: "700-799"
      name: "AI integration rules"
      description: "OpenAI integration and chat functionality"
    - range: "900-999"
      name: "Project-specific custom rules"
      description: "Rules specific to YNAB API integration"

current_rules:
  - name: "start rule"
    purpose: "Initial setup and configuration"
    when_to_use: "When setting up the project for the first time"
    location: ".cursor/rules/start rule"
    category: "000-099"

  - name: "001-project-structure"
    purpose: "Define core project structure and organization"
    when_to_use: "When adding new files or directories"
    location: ".cursor/rules/001-project-structure.yaml"
    category: "000-099"

  - name: "002-phased-development"
    purpose: "Define phased development strategy for feature implementation"
    when_to_use: "When planning and implementing new features"
    location: ".cursor/rules/002-phased-development.yaml"
    category: "000-099"

  - name: "100-dev-workflow"
    purpose: "Define development workflow and processes"
    when_to_use: "During development activities"
    location: ".cursor/rules/100-dev-workflow.yaml"
    category: "100-199"
    
  - name: "200-vue-style"
    purpose: "Vue.js specific coding standards"
    when_to_use: "When writing or modifying Vue components"
    location: ".cursor/rules/200-vue-style.yaml"
    category: "200-299"

  - name: "201-ui-architecture"
    purpose: "Define UI component hierarchy and data flow"
    when_to_use: "When working on UI components or data management"
    location: ".cursor/rules/201-ui-architecture.yaml"
    category: "200-299"

  - name: "400-api-docs"
    purpose: "YNAB API integration documentation standards"
    when_to_use: "When working with YNAB API endpoints"
    location: ".cursor/rules/400-api-docs.yaml"
    category: "400-499"

  - name: "500-webpack-deploy"
    purpose: "Webpack build and deployment configuration"
    when_to_use: "When modifying build process or deploying"
    location: ".cursor/rules/500-webpack-deploy.yaml"
    category: "500-599"

  - name: "600-backend-architecture"
    purpose: "Express and PostgreSQL architecture standards"
    when_to_use: "When working on backend features"
    location: ".cursor/rules/600-backend-architecture.yaml"
    category: "600-699"

  - name: "601-database-schema"
    purpose: "PostgreSQL database schema and migrations"
    when_to_use: "When modifying database structure"
    location: ".cursor/rules/601-database-schema.yaml"
    category: "600-699"

  - name: "700-ai-integration"
    purpose: "OpenAI chat integration standards"
    when_to_use: "When working with AI features"
    location: ".cursor/rules/700-ai-integration.yaml"
    category: "700-799"

  - name: "701-agentic-search"
    purpose: "Agentic web search and workflow analysis"
    when_to_use: "When implementing or modifying web search and workflow discovery features"
    location: ".cursor/rules/701-agentic-search.yaml"
    category: "700-799"

  - name: "702-agent-orchestration"
    purpose: "Multi-agent system architecture and data flow"
    when_to_use: "When working with agent interactions and data synchronization"
    location: ".cursor/rules/702-agent-orchestration.yaml"
    category: "700-799"

  - name: "900-ynab-integration"
    purpose: "YNAB API specific integration rules"
    when_to_use: "When working with YNAB API features"
    location: ".cursor/rules/900-ynab-integration.yaml"
    category: "900-999"

  - name: "300-testing"
    purpose: "Testing standards emphasizing real integrations over mocks"
    when_to_use: "When writing tests or setting up test environments"
    location: ".cursor/rules/300-testing.yaml"
    category: "300-399"

rule_creation_guide:
  steps:
    - "Choose an appropriate number prefix based on the category"
    - "Create a new file in .cursor/rules/"
    - "Add an entry in this core rule file"
  required_fields:
    - "Purpose"
    - "When to use"
    - "Location"
    - "Dependencies or prerequisites"
    - "Category"

best_practices:
  - "Always update this index when adding new rules"
  - "Keep rule names descriptive and lowercase"
  - "Include detailed comments within each rule file"
  - "Cross-reference related rules when relevant"
  - "Use .yaml extension for all rule files"
  - "Follow the category numbering system strictly"

project_state:
  framework: "Vue.js 3"
  build_tool: "Webpack 5"
  package_manager: "npm"
  key_dependencies:
    - "ynab: ^2.2.0"
    - "vue: ^3.4.5"
  future_integrations:
    - name: "Backend"
      components:
        - "Express server"
        - "PostgreSQL on Replit"
      status: "Planned"
    - name: "AI Chat"
      components:
        - "OpenAI integration"
        - "Chat interface"
      status: "Planned"
    - name: "Web Search"
      components:
        - "Search API integration"
        - "Workflow discovery"
      status: "Future Enhancement"
  key_features:
    - "YNAB API integration"
    - "Development server with hot reload"
    - "Production build optimization" 