---
name: "Development Workflow"
category: "100-199"
description: "Defines development processes and standards"

security_context:
  type: "Personal Project"
  description: "This is a personal garage project with no other users or access requirements."

development_environment:
  setup:
    - "Install Node.js 20.x using nvm"
    - "Clone repository"
    - "Run npm install"
    - "Copy .env.example to .env"
    - "Configure environment variables"
  
  validation:
    - "Run npm run validate:config"
    - "Verify Node.js version"
    - "Check module resolution"
    - "Test build process"

development_server:
  commands:
    start: "npm start"
    build: "npm run build"
  features:
    - "Hot module replacement"
    - "Development mode with source maps"
    - "Automatic browser refresh"
    - "API proxy configuration"

module_system:
  type: "ES Modules"
  standards:
    - "Use .js extension with type: module"
    - "Import/export syntax only"
    - "Path resolution with import.meta.url"
    - "No require() statements"
  validation:
    - "TypeScript ESM configuration"
    - "Webpack ESM support"
    - "Babel module preservation"

dependency_management:
  updating:
    - "Regularly check for updates (npm outdated)"
    - "Update dependencies one at a time"
    - "Test thoroughly after updates"
    - "Keep package-lock.json in sync"
  
  validation:
    - "Run config validation"
    - "Check build process"
    - "Test module resolution"
    - "Verify type definitions"

error_handling:
  build_errors:
    - "Check module resolution"
    - "Verify loader configuration"
    - "Test import statements"
    - "Validate TypeScript setup"
  
  runtime_errors:
    - "Monitor hot reload"
    - "Check chunk loading"
    - "Debug module evaluation"

best_practices:
  - "Use ES modules consistently"
  - "Run validation before commits"
  - "Keep dependencies updated"
  - "Document configuration changes"
  - "Test after dependency updates"
  - "Monitor build process" 